{"version":3,"sources":["components/NavBar.js","components/Button.js","index.js","pages/Home.js","pages/HomeLogout.js","pages/CreatePoll.js","pages/ViewPoll.js","pages/Login.js","pages/SignUp.js"],"names":["NavBar","history","useHistory","className","localStorage","getItem","to","onClick","clear","push","Button","children","ReactDOM","render","StrictMode","exact","path","component","userId","useState","polls","setPolls","fetchPolls","a","fetch","response","json","data","useEffect","map","poll","key","_id","title","src","setTitle","choices","setChoices","errors","setErrors","success","setSuccess","createPoll","method","headers","body","JSON","stringify","ok","pollId","length","error","index","message","htmlFor","onChange","event","target","value","name","id","type","choice","newChoices","choiceIndex","onChoiceChange","filter","removeChoice","match","ip","setIp","setPoll","voted","setVoted","fetchPoll","params","fetchClientIpAddress","vote","console","log","getTotalVotes","totalVotes","forEach","count","selectedChoice","Math","round","getChoicePercentage","voteData","i","chartType","options","graph_id","width","height","legend_toggle","ShowChart","email","setEmail","password","setPassword","login","setItem","token","placeholder","username","setUsername","signUp","document","getElementById"],"mappings":"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","file":"static/js/main.59b0e212.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nexport default function NavBar() {\r\n  let history = useHistory()\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    history.push('/homelg')\r\n  }\r\n\r\n  return (\r\n  <div className=\"h-16 bg-blue-700 flex items-center\">\r\n    <div className=\"container mx-auto pl-5\">\r\n      { localStorage.getItem(\"userId\") ?\r\n        <>\r\n        <Link to='/' className='text-white cursor-pointer hover:text-gray-400 transition duration-150 lg:ml-3'>Home</Link>\r\n        <Link to='/polls/create' className='text-white cursor-pointer hover:text-gray-400 transition duration-150 ml-3'>Create Poll</Link>\r\n        </> : null\r\n      }\r\n    </div>\r\n    <div className=\"container mx-auto pr-5 text-right\">\r\n      { !localStorage.getItem(\"userId\") ?\r\n        <>\r\n        <Link to='/login' className='text-white cursor-pointer hover:text-gray-400 transition duration-150 mr-3'>Login</Link>\r\n        <Link to='/signup' className='text-white cursor-pointer hover:text-gray-400 transition duration-150 lg:mr-3'>Register</Link>\r\n        </>\r\n        :\r\n        <button className='text-white cursor-pointer hover:text-gray-400 transition duration-150 lg:mr-3' onClick={() => logout()}>Logout</button>\r\n      }\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n","import React from 'react'\n\nexport default function Button({ children, onClick }) {\n    return (\n        <button onClick={onClick} className='bg-blue-600 text-white px-3 py-2 border border-blue-600 active:border-blue-700 text-sm rounded-sm hover:bg-blue-700 transition duration-150 ease-in-out'>{children}</button>\n    )\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Home from './pages/Home';\r\nimport ViewPoll from './pages/ViewPoll';\r\nimport CreatePoll from './pages/CreatePoll';\r\nimport Login from './pages/Login';\r\nimport SignUp from './pages/SignUp';\r\nimport HomeLogout from './pages/HomeLogout'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <div className=\"w-full min-h-screen bg-gradient-to-r from-white to-blue-300\">\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route path='/homelg' component={HomeLogout} />\r\n          <Route path='/polls/create' component={CreatePoll} />\r\n          <Route path='/polls/:poll' component={ViewPoll} />\r\n          <Route path='/login' component={Login} />\r\n          <Route path='/signup' component={SignUp} />\r\n        </Switch>\r\n      </div>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom';\n\nimport NavBar from '../components/NavBar';\n\nexport default function Home() {\n    let history = useHistory()\n    if (!localStorage.getItem(\"userId\")) {\n        history.push('/homelg')\n    }\n    const userId = localStorage.getItem(\"userId\")\n    const [polls, setPolls] = useState([])\n\n    const fetchPolls = async () => {\n        const response = await fetch(`http://3.97.6.204:4000/my-polls/${userId}`)\n        const data = await response.json()\n        setPolls(data)\n    }\n\n    useEffect(() => {\n        fetchPolls();\n    }, [])\n\n    return (\n        <>\n            <NavBar />\n        <div className='container mx-auto px-5'>\n            <h1 className='text-5xl font-bold text-gray-800 text-center my-10'>Welcome!</h1>\n            <div className='w-full max-w-3xl mx-auto bg-gradient-to-r from-blue-100 to-white shadow'>\n                <div className='w-full px-4 py-4 border-b border-gray-400'>\n                    <h2 className='lg:text-2xl text-center'>Here you can see the polls you have created</h2>\n                </div>\n                {polls.map(poll => (\n                    <div key={poll._id} className='w-full px-4 py-4 border-b border-gray-400 flex justify-between'>\n                            {poll.title}\n                            <Link className='bg-blue-600 text-white px-3 py-2 border border-blue-600 active:border-blue-700 text-sm rounded-sm hover:bg-blue-700 transition duration-150 ease-in-out'  to={`/polls/${poll._id}`}>View poll</Link>\n                    </div>\n                ))}\n            </div>\n            <p className=\"text-center leading-normal mt-8\">\n                Click on 'Create Poll' from the NavBar to create a new poll.\n            </p>\n        </div>\n        </>\n    )\n}\n","import React from 'react'\r\nimport NavBar from '../components/NavBar'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function HomeLogout() {\r\n    return (\r\n        <>\r\n        <NavBar />\r\n        <div className=\"container mx-auto px-6 pt-10\" >\r\n            <div className=\"container px-3 mx-auto flex flex-wrap flex-col md:flex-row items-center\">\r\n                <div className=\"flex flex-col w-full md:w-2/5 justify-center items-start text-center md:text-left\">\r\n                    <p className=\"uppercase tracking-loose w-full\">The simplest voting platform</p>\r\n                    <h1 className=\"my-4 text-gray-800 text-5xl font-bold leading-tight\">\r\n                        Get Opinions from Anywhere!\r\n                    </h1>\r\n                    <p className=\"leading-normal text-2xl mb-8\">\r\n                        Sign in to create polls. <br/> Participants do NOT need an account!\r\n                    </p>\r\n                    <div className=\"mx-auto lg:mx-0\">\r\n                    <Link to=\"/login\" className=\"mr-4 bg-blue-600 text-white font-bold rounded my-6 py-4 px-8 shadow-lg focus:outline-none focus:shadow-outline transform transition hover:scale-105 duration-300 ease-in-out\">\r\n                        Login\r\n                    </Link>\r\n                    <Link to=\"/signup\" className=\"bg-blue-600 text-white font-bold rounded my-6 py-4 px-8 shadow-lg focus:outline-none focus:shadow-outline transform transition hover:scale-105 duration-300 ease-in-out\">\r\n                        Register\r\n                    </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-full md:w-3/5 py-6 text-center\">\r\n                    <img className=\"w-full md:w-4/5 z-50\" src=\"img/icon.png\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { Link, useHistory } from 'react-router-dom';\nimport React, { useState, Fragment } from 'react'\n\nimport NavBar from '../components/NavBar';\n\nexport default function CreatePoll() {\n    let history = useHistory()\n    if (!localStorage.getItem(\"userId\")) {\n        history.push('/signup')\n    }\n    const [title, setTitle] = useState('')\n    const [choices, setChoices] = useState([''])\n    const [errors, setErrors] = useState([])\n    const [success, setSuccess] = useState({})\n\n    const addAnswer = () => {\n        setChoices([\n            ...choices,\n            ''\n        ])\n    }\n\n    const removeChoice = (index) => {\n        const newChoices = choices.filter((choice, choiceIndex) => {\n            return choiceIndex !== index\n        })\n\n        setChoices(newChoices)\n    }\n\n    const onChoiceChange = (index, value) => {\n        const newChoices = choices.map((choice, choiceIndex) => {\n            if (choiceIndex === index) {\n                return value\n            }\n\n            return choice\n        })\n\n        setChoices(newChoices)\n    }\n/*  I dont want to use localStorage to save the polls anymore\n    const updatePollsToLocalStorage = (successData) => {\n        const existingPolls = JSON.parse(localStorage.getItem('polls')) || []\n\n        const updatedPolls = [\n            ...existingPolls,\n            {\n                title,\n                id: successData.pollId\n            }\n        ]\n\n        localStorage.setItem('polls', \n        JSON.stringify(updatedPolls))\n    }*/\n\n    const createPoll = async () => {\n        const response = await fetch(`http://3.97.6.204:4000/polls`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem(\"token\")\n            },\n            body: JSON.stringify({\n                userId : localStorage.getItem(\"userId\"),\n                title,\n                choices\n                \n            })\n        })\n\n\n        const data = await response.json()\n\n        if (! response.ok) {\n            setErrors(data)\n\n            return\n        }\n\n        setSuccess(data)\n        //updatePollsToLocalStorage(data)\n    }\n\n    return (\n        <>\n        <NavBar />\n        <div className=\"container mx-auto px-6 \">\n            <h1 className='text-5xl font-bold text-gray-800 text-center my-10'>Create a Poll</h1>\n          <div className=\"w-full max-w-3xl mx-auto rounded shadow-md bg-gradient-to-r from-blue-100 to-white\">\n\n              {success.pollId ? (\n                  <div className=\"py-5 px-8\">\n                      <p className=\"text-gray-800 py-3\">Poll created successfully! Click on the link to see your poll, or copy it to share it with others!</p>\n                      <div className=\"w-full mb-2 bg-green-100 text-green-500 border border-green-500 rounded py-3 px-2\">\n                          <Link to={`/polls/${success.pollId}`}>\n                          http://3.97.6.204/#/polls/{success.pollId}\n                          </Link>\n                      </div>\n                  </div>\n              ) : null}\n\n              {!success.pollId ? (\n                <div className=\"py-5 px-8\">\n                  {errors.length > 0 ? (\n                      <Fragment>\n                          {errors.map((error, index) => (\n                              <p key={index} className='w-full mb-2 bg-red-500 text-white py-3 px-2 rounded'>{error.message}</p>\n                          ))}\n                      </Fragment>\n                  ): null}\n                  <div className=\"mb-6\">\n                      <label htmlFor=\"title\" className=\"text-sm mb-2 inline-block\">Enter the title of the poll:</label>\n                      <input onChange={(event) => setTitle(event.target.value)} value={title}  name='title' id='title' type=\"text\" className='w-full py-2 border border-gray-400 rounded px-4' />\n                  </div>\n\n                  <div className=\"mb-3\">\n                    <label className=\"text-sm mb-2 inline-block\">Enter all the possible answers for this poll:</label>\n                    {choices.map((choice, index) => (\n                        <div key={index} className=\"w-full flex items-center mb-2\">\n                            <input onChange={(event) => onChoiceChange(index, event.target.value)} key={index} type=\"text\" value={choice} className='w-full py-2 border border-gray-400 rounded px-4' />\n                            <button onClick={() => removeChoice(index)} className='py-2 ml-2 px-3 bg-red-500 text-white rounded hover:bg-red-600'>Remove</button>\n                        </div>\n                    ))}\n                  </div>\n\n                  <button onClick={addAnswer} className='bg-blue-600 text-white px-3 py-2 border border-blue-600 active:border-blue-700 text-sm rounded-sm hover:bg-blue-700 transition duration-150 ease-in-out'>Add choice</button>\n\n                  <div className=\"mt-12 mb-6 text-center\">\n                    <button onClick={createPoll} className='bg-blue-600 text-white font-bold rounded py-4 px-8 shadow-lg focus:outline-none focus:shadow-outline transform transition hover:scale-105 duration-300 ease-in-out'>Create Poll</button>\n                  </div>\n                </div>\n              ) : null}\n          </div>\n       </div>\n       </>\n    )\n}\n","import React, { useEffect, useState } from 'react'\r\nimport NavBar from '../components/NavBar';\r\nimport Chart from \"react-google-charts\";\r\nimport Button from '../components/Button'\r\n\r\nexport default function ViewPoll({ match }) {\r\n    const [ip, setIp] = useState(null)\r\n    const [poll, setPoll] = useState(null)\r\n    const [voted, setVoted] = useState(false)\r\n\r\n    const fetchPoll = async () => {\r\n        const response = await fetch(`http://3.97.6.204:4000/polls/${match.params.poll}`)\r\n        const data = await response.json()\r\n        setPoll(data)\r\n    }\r\n\r\n    const fetchClientIpAddress = async () => {\r\n        const response = await fetch('https://api.ipify.org?format=json')\r\n        const data = await response.json()\r\n        setIp(data.ip)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPoll()\r\n    }, [voted])\r\n\r\n    useEffect(() => {\r\n        fetchClientIpAddress()\r\n    }, [])\r\n\r\n    const vote = async (choice) => {\r\n        console.log(ip);\r\n        console.log(choice);\r\n        await fetch(`http://3.97.6.204:4000/polls/${match.params.poll}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                ip,\r\n                choice\r\n            })\r\n        })\r\n\r\n        setVoted(true)\r\n    }\r\n\r\n    const getTotalVotes = () => {\r\n        let totalVotes = 0\r\n        poll.choices.forEach(choice => {\r\n            totalVotes += choice.count\r\n        })\r\n        return totalVotes\r\n    }\r\n\r\n    const getChoicePercentage = (selectedChoice) => {\r\n        const totalVotes = getTotalVotes()\r\n        if (totalVotes === 0) {\r\n            return 0\r\n        }\r\n        return Math.round((selectedChoice.count / totalVotes) * 100)\r\n    }\r\n    \r\n    const ShowChart = () => {\r\n        console.log(poll)\r\n\r\n        let voteData = [['Option', 'Number of votes']]\r\n        for (let i = 0; i < poll.choices.length; i ++) {\r\n            voteData.push([poll.choices[i].name, poll.choices[i].count])\r\n            console.log(\"here is voteData: \", voteData)\r\n        }\r\n\r\n        return (\r\n            <Chart chartType=\"PieChart\"\r\n                options={{ title: poll.title }}\r\n                graph_id={\"PollPieChart\"}\r\n                width=\"320px\" height=\"320px\"\r\n                data={voteData}\r\n                legend_toggle />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <NavBar />\r\n        <div className=\"container mx-auto px-5\">\r\n            <h1 className=\"text-3xl text-center my-3 font-bold text-gray-800\">Welcome to the Simplest Voting App</h1>\r\n            <p className='pb-6 text-center'>Please cast your vote, or click on \"View Results\" to see this poll's statistics.</p>\r\n            {poll ? (\r\n                <div className=\"w-full max-w-3xl mx-auto  bg-gradient-to-r from-blue-100 to-white shadow\">\r\n                    <header className='px-5 py-4 flex justify-between items-center'>\r\n                        {poll.title}\r\n                        {voted && <span>{getTotalVotes()} votes</span>}\r\n                        <Button onClick={() => setVoted(true)}>View results</Button>\r\n                    </header>\r\n                    {poll.choices.map(choice => {\r\n                        return (\r\n                            <div className='px-5 py-4 border-t border-gray-400 flex justify-between items-center' key={choice._id}>\r\n                                {choice.name}\r\n\r\n                                {voted ? (\r\n                                    <span className='text-blue-500'> {getChoicePercentage(choice)}% </span>\r\n                                ) :  <Button onClick={() => vote(choice._id)}>Vote</Button>}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n        <div className='flex justify-between content-center'>\r\n            {voted ? (\r\n                <span className='mx-auto my-10 max-w-full'>\r\n                    {ShowChart()}\r\n                </span>\r\n            ) : null}\r\n        </div>\r\n        <div className='container mx-auto px-5'>\r\n        <p className='pt-6 text-center'>Note 1: This application detects your public IP address so you can vote only once. We do not use this information in any other way.</p>\r\n        <p className='pt-3 pb-10 text-center'>Note 2: This application may not work if you are using an AddBlocker. If that's the case open this page in an Incognito Window or change to a different browser.</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, Fragment } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport NavBar from '../components/NavBar';\r\n\r\nexport default function Login() {\r\n  let history = useHistory()\r\n  if (localStorage.getItem(\"userId\")) {\r\n      history.push('/')\r\n  }\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const [errors, setErrors] = useState([])\r\n\r\n  const login = async () => {\r\n    // you need to change the route here\r\n    const response = await fetch(`http://3.97.6.204:4000/signin`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n      body: JSON.stringify({\r\n        email,\r\n        password\r\n      })\r\n    })\r\n    const data = await response.json()\r\n        if (! response.ok) {\r\n            setErrors(data)\r\n            return\r\n        }\r\n    if (data)\r\n    console.log(data)\r\n    localStorage.setItem(\"token\", \"Bearer \" + data.token);\r\n    localStorage.setItem(\"userId\", data.userId)\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <NavBar />\r\n    <div className=\"container mx-auto px-6\">\r\n      <h1 className='text-5xl font-bold text-gray-800 text-center my-10'>Login</h1>\r\n      {errors.length > 0 ? (\r\n        <Fragment>\r\n            {errors.map((error, index) => (\r\n                <p key={index} className='w-full mb-2 bg-red-500 text-white py-3 px-2 rounded'>{error.message}</p>\r\n            ))}\r\n        </Fragment>\r\n      ): null}\r\n      <div className=\"w-full max-w-3xl mx-auto rounded shadow-md bg-gradient-to-r from-blue-100 to-white\">\r\n        <div className=\"py-5 px-8\">\r\n          <div className=\"mb-6\">\r\n            <label htmlFor=\"email\" className=\"text-sm mb-2 inline-block\">Email:</label>\r\n            <input placeholder=\"Enter your email\" onChange={event => setEmail(event.target.value)} value={email} name='email' id='email' type=\"email\" className='w-full py-2 border border-gray-400 rounded px-4' />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"password\" className=\"text-sm mb-2 inline-block\">Password:</label>\r\n            <input placeholder=\"Enter your password\" onChange={event => setPassword(event.target.value)} value={password} name='password' id='password' type=\"password\" className='w-full py-2 border border-gray-400 rounded px-4' />\r\n          </div>\r\n          <div className=\"mt-12 mb-6 text-center\">\r\n            <button onClick={login} className='bg-blue-600 text-white font-bold rounded py-4 px-8 shadow-lg focus:outline-none focus:shadow-outline transform transition hover:scale-105 duration-300 ease-in-out'>Login</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, Fragment } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport NavBar from '../components/NavBar';\r\n\r\nexport default function SignUp() {\r\n  let history = useHistory()\r\n  if (localStorage.getItem(\"userId\")) {\r\n      history.push('/')\r\n  }\r\n  const [username, setUsername] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const [errors, setErrors] = useState([])\r\n\r\n  const signUp = async () => {\r\n    // you need to change the route here\r\n    const response = await fetch(`http://3.97.6.204:4000/signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n      body: JSON.stringify({\r\n        username,\r\n        email,\r\n        password\r\n      })\r\n    })\r\n    const data = await response.json()\r\n        if (! response.ok) {\r\n            setErrors(data)\r\n            return\r\n        }\r\n    console.log(data)\r\n    history.push('/login')\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <NavBar />\r\n    <div className=\"container mx-auto px-6 \">\r\n      <h1 className='text-5xl font-bold text-gray-800 text-center my-10'>Register</h1>\r\n      {errors.length > 0 ? (\r\n        <Fragment>\r\n            {errors.map((error, index) => (\r\n                <p key={index} className='w-full mb-2 bg-red-500 text-white py-3 px-2 rounded'>{error.message}</p>\r\n            ))}\r\n        </Fragment>\r\n      ): null}\r\n      <div className=\"w-full max-w-3xl mx-auto rounded shadow-md  bg-gradient-to-r from-blue-100 to-white\">\r\n        <div className=\"py-5 px-8\">\r\n          <div className=\"mb-6\">\r\n            <label htmlFor=\"Username\" className=\"text-sm mb-2 inline-block\">Username:</label>\r\n            <input placeholder=\"Enter a username\" onChange={event => setUsername(event.target.value)} name='username' id='username' type=\"username\" className='w-full py-2 border border-gray-400 rounded px-4' />\r\n          </div>\r\n          <div className=\"mb-6\">\r\n            <label htmlFor=\"email\" className=\"text-sm mb-2 inline-block\">Email:</label>\r\n            <input placeholder=\"Enter an email\" onChange={event => setEmail(event.target.value)} value={email} name='email' id='email' type=\"email\" className='w-full py-2 border border-gray-400 rounded px-4' />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"password\" className=\"text-sm mb-2 inline-block\">Password:</label>\r\n            <input placeholder=\"Enter a password\" onChange={event => setPassword(event.target.value)} value={password} name='password' id='password' type=\"password\" className='w-full py-2 border border-gray-400 rounded px-4' />\r\n          </div>\r\n          <div className=\"mt-12 mb-6 text-center\">\r\n            <button onClick={signUp} className='bg-blue-600 text-white font-bold rounded py-4 px-8 shadow-lg focus:outline-none focus:shadow-outline transform transition hover:scale-105 duration-300 ease-in-out'>SignUp</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n"],"sourceRoot":""}